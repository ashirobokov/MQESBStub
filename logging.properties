# Properties file which configures the operation of the JDK 
# logging facility. 

# The system will look for this config file, first using 
# a System property specified at startup: 
# 
# >java -Djava.util.logging.config.file=myLoggingConfigFilePath 
# 
# If this property is not specified, then the config file is 
# retrieved from its default location at: 
# 
# JDK_HOME/jre/lib/logging.properties 

# Global logging properties. 
# ------------------------------------------ 
# The set of handlers to be loaded upon startup. 
handlers=java.util.logging.ConsoleHandler, java.util.logging.FileHandler 

# Default global logging level. 
# Loggers and Handlers may override this level 
.level=CONFIG

# Handlers
# ----------------------------------------- 

# --- ConsoleHandler --- 
# Override of global logging level 
java.util.logging.ConsoleHandler.level=ALL
java.util.logging.ConsoleHandler.encoding=Cp1251 
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter 

# --- FileHandler --- 
# Override of global logging level 
java.util.logging.FileHandler.level=ALL
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

# Naming style for the output file: 
# (The output file is placed in the directory 
# defined by the "user.home" System property.) 
#java.util.logging.FileHandler.pattern=%h/log%u%g.log 
java.util.logging.FileHandler.pattern=log/mq_esb_stub_log%u%g.log 

# Limiting size of output file in bytes: 
java.util.logging.FileHandler.limit=50000 

# Number of output files to cycle through, by appending an 
# integer to the base file name: 
java.util.logging.FileHandler.count=1
